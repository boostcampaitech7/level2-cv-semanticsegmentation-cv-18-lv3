train:
  num_epochs: 100
  n_splits: 5
  threshold: 0.5
   
  metric: 
    name: "dice_coef"
  # accuracy / f1 / precision / recall / mse / dice_coef

  criterion: 
    name: "focal+dice"
  # CrossEntropy / bce / bce+dice / dice / StructureLoss(for SAM2-UNET) / focal+dice / unet3p

  optimizer:
    name: "AdamW"
    # Adam / SGD / AdamW
    config:
      weight_decay: 1.e-1
      # momentum: 0.9
      lr: 1.e-4

  # lr_scheduler:
  #   name: "CosineAnnealingWarmupRestarts"
  #   monitor: "metric"
  #   config:
  #     # factor: 0.1
  #     # patience: 20
  #     first_cycle_steps: 20
  #     min_lr: 1.e-6
  #     max_lr: 8.e-4
  #     # verbose: True
  #     warmup_steps: 3.2e-6

  lr_scheduler:
    name: "ReduceLROnPlateau"
    monitor: "metric"
    config:
      factor: 0.1
      patience: 20
      # first_cycle_steps: 20
      min_lr: 1.e-6
      # max_lr: 8.e-4
      verbose: True
      # warmup_steps: 3.2e-6

  early_stopping:
    patience: 5
    min_delta: 0.001
    evidence: 'loss'
    monitor: 'metric'

model:
  name: "sam_b"

  # torchvision : fcn_50 / fcn_101 / deeplabv3_50 / deeplabv3_101 

  # smp : smp_unet / smp_unet++
  # encoder: resnet34 / resnet101 / efficientnet-b[0-7] / tu-maxvit_tiny_tf512 
  # ex : smp_unet++_efficientnet-b5

  # 이외 : myUnet / sam2unet_[tiny,base,large] / sam_[b,h,l]

  config:
    pretrained: True
  

webhook : 
  # url : "https://hooks.slack.com/services/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"
  url : "https://hooks.slack.com/services/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"